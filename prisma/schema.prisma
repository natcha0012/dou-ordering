// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int     @id @default(autoincrement())
  username       String  @unique()
  role           String
  password       String
  salt           String
  tokenVersion   BigInt  @default(0) @map("token_version")
  telNo          String? @map("tel_no")
  branchMasterId Int?    @map("branch_master_id")
  branchId       Int?    @map("branch_id")

  BranchMaster BranchMaster? @relation(fields: [branchMasterId], references: [id])
  Branch       Branch?       @relation(fields: [branchId], references: [id])
  D_Order      Order[]       @relation("deliver")
  P_Order      Order[]       @relation("packing")
  Order        Order[]       @relation("user")

  @@index([role])
  @@map("user")
}

model BranchMaster {
  id     Int      @id @default(autoincrement())
  name   String   @unique()
  User   User[]
  Branch Branch[]
  Order  Order[]

  @@map("branch_master")
}

model Branch {
  id             Int    @id @default(autoincrement())
  name           String @unique()
  branchMasterId Int    @map("branch_master_id")

  BranchMaster BranchMaster @relation(fields: [branchMasterId], references: [id])

  User  User[]
  Order Order[]

  @@index([branchMasterId])
  @@map("branch")
}

model Product {
  id            Int    @id @default(autoincrement())
  name          String @unique()
  productTypeId Int

  productType ProductType @relation(fields: [productTypeId], references: [id])

  //not sure yet
  //@@index([]) 
  @@map("product")
}

model ProductType {
  id      Int       @id @default(autoincrement())
  name    String    @unique()
  Product Product[]

  @@map("product_type")
}

model Order {
  id             BigInt @id @default(autoincrement())
  branchId       Int    @map("branch_id")
  branchName     String @map("branch_name")
  branchMasterId Int    @map("branch_master_id")
  orderDetail    Json[] @map("order_detail")
  actualProducts Json[] @map("actual_product")
  status         String
  createdAt      BigInt @default(0) @map("created_at")
  updatedAt      BigInt @default(0) @map("updated_at")
  deliverId      Int?   @map("deliver_id")
  packingId      Int?   @map("packing_id")
  createdBy      Int?   @map("created_by")

  Branch       Branch       @relation(fields: [branchId], references: [id])
  BranchMaster BranchMaster @relation(fields: [branchMasterId], references: [id])
  Deliver      User?        @relation(fields: [deliverId], references: [id], "deliver")
  Packing      User?        @relation(fields: [packingId], references: [id], "packing")
  User         User?        @relation(fields: [createdBy], references: [id], "user")

  @@index([branchMasterId, branchId, status])
  @@index([branchId, status])
  @@map("order")
}
